import asyncio
import logging
import os
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram import F
from aiogram.router import Router
from dotenv import load_dotenv

load_dotenv()

TOKEN = os.getenv("BOT_TOKEN")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
bot = Bot(token=TOKEN)
storage = MemoryStorage()
dp = Dispatcher(storage=storage)
router = Router()
dp.include_router(router)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
goals_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üî• –ù–∞–±–æ—Ä –º–∞—Å—Å—ã")],
        [KeyboardButton(text="üí™ –°—É—à–∫–∞")],
        [KeyboardButton(text="üßò‚Äç‚ôÄÔ∏è –ó–¥–æ—Ä–æ–≤—å–µ")]
    ],
    resize_keyboard=True
)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ /start
@router.message(F.text == "/start")
async def cmd_start(message: types.Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! üëã –î–∞–≤–∞–π –ø–æ–¥–±–µ—Ä—ë–º —Ç–µ–±–µ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ. –ö–∞–∫–∞—è —É —Ç–µ–±—è —Ü–µ–ª—å?",
        reply_markup=goals_kb
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ü–µ–ª–∏
@router.message(F.text.in_({"üî• –ù–∞–±–æ—Ä –º–∞—Å—Å—ã", "üí™ –°—É—à–∫–∞", "üßò‚Äç‚ôÄÔ∏è –ó–¥–æ—Ä–æ–≤—å–µ"}))
async def handle_goal(message: types.Message):
    await message.answer(f"–û—Ç–ª–∏—á–Ω–æ! –¢—ã –≤—ã–±—Ä–∞–ª —Ü–µ–ª—å: *{message.text}*. –°–∫–æ—Ä–æ –º—ã –ø—Ä–µ–¥–ª–æ–∂–∏–º —Ç–µ–±–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –±–æ–∫—Å üíº",
                         parse_mode="Markdown")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    logging.basicConfig(level=logging.INFO)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())